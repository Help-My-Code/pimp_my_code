# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: [feat/k8s]
  pull_request:
    branches: [feat/k8s]
jobs:
#  build_web:
#    name: build_web
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: subosito/flutter-action@v2
#        with:
#          flutter-version: "2.10.4"
#      - run: flutter pub get
#      - run: flutter test
#      - run: flutter build web
#  build_apk:
#    name: build_apk
#    needs: build_web
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-java@v2
#        with:
#          distribution: "zulu"
#          java-version: "11"
#      - uses: subosito/flutter-action@v2
#        with:
#          flutter-version: "2.10.4"
#      - run: flutter pub get
#      - run: flutter test
#      - run: flutter build apk
#      - run: flutter build appbundle
#  build_ios:
#    name: build_ios
#    needs: build_apk
#    runs-on: macos-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: subosito/flutter-action@v2
#        with:
#          flutter-version: '2.10.4'
#          architecture: x64
#      - run: flutter pub get
#      - run: flutter test
#      - run: flutter build ios --release --no-codesign
  push_to_registry:
    name: push_to_registry
#    needs: build_ios
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: sudo apt-get update
      - run: sudo apt-get install ca-certificates curl gnupg lsb-release
      - run: sudo mkdir -p /etc/apt/keyrings
      - run: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
      - run: echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      - run: sudo apt-get update
      - run: sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin
      - run: docker login rg.fr-par.scw.cloud/${{ secrets.DEV_DOCKER_REGISTRY }} -u nologin --password-stdin <<< "${{ secrets.DEV_DOCKER_REGISTRY_PASSWORD }}"
      - run: docker build -t flutter-pimp-my-code-dev-${{ secrets.DEV_DOCKER_VERSION }} .
      - run: docker tag flutter-pimp-my-code-snapshot-${{ secrets.DEV_DOCKER_VERSION }} rg.fr-par.scw.cloud/k8s-pmc/flutter-pimp-my-code-dev
      - run: docker push rg.fr-par.scw.cloud/k8s-pmc/flutter-pimp-my-code:snapshot-${{ secrets.DEV_DOCKER_VERSION }}
  deploy:
    name: deploy
    needs: push_to_registry
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: appleboy/ssh-action@master
        with:
          host: '${{ secrets.K8S_MASTER_HOST_IP }}'
          username: '${{ secrets.K8S_MASTER_USERNAME }}'
          password: '${{ secrets.K8S_MASTER_PASSWORD }}'
          script: cd k8s-pmc/ && git pull && helm upgrade flutter-pimp-my-code flutter-pimp-my-code/ -f flutter-pimp-my-code/values.yaml
